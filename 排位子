#include<iostream>
#include<algorithm>
#include<set>
#include<map>

using namespace std;

struct data{
    int a;
    int b;
};
struct rule
{
    bool operator ()(const data &x,const data &y)
    {
        return x.b>=y.b;
    }
};
int main()
{
    int m,n,k,l,d;
    cin>>m>>n>>k>>l>>d;
    int a[4005][2]={0,0};
    for(int i=0;i<2*d;i++)
        cin>>a[i][0]>>a[i][1];
    int kd[4002]={0},ld[4002]={0},kk=0,ll=0;
    for(int i=0;i<2*d;i=i+2)
        if(a[i][0]!=a[i+1][0])
        {
            int x=a[i][0]<a[i+1][0]?a[i][0]:a[i+1][0];
            kd[kk++]=x;
        }
    for(int i=0;i<2*d;i=i+2)
        if(a[i][1]!=a[i+1][1])
        {
            int y=a[i][1]<a[i+1][1]?a[i][1]:a[i+1][1];
            ld[ll++]=y;
        }
    typedef map<int,int> M;
    typedef set<data,rule> S;
    M mpk,mpl;
    S stk,stl;
    for(int i = 0;i < kk; i++)
        mpk[kd[i]]++;
    for(int i = 0;i < ll; i++)
        mpl[ld[i]]++;
    M::iterator p;
    S::iterator q;
    for(p=mpk.begin();p!=mpk.end();p++)
    {
        data t;
        t.a=p->first;
        t.b=p->second;
        stk.insert(t);
    }
    for(p=mpl.begin();p!=mpl.end();p++)
    {
        data t;
        t.a=p->first;
        t.b=p->second;
        stl.insert(t);
    }
    int ok=0;
    for(q=stk.begin();q!=stk.end()&&ok<k;q++,k++)
        cout<<q->a<<' ';
        cout<<endl;
    ok=0;
    for(q=stl.begin();q!=stl.end()&&ok<l;q++,ok++)
        cout<<q->a<<' ';
    cout<<endl;
    return 0;
}
