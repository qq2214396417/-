二分法

#include<iostream>
#include<algorithm>
using namespace std;
int s(int a[],int n,int k){
    int left=0,right=n-1;
   while(left<=right){
    int mid=(left+right)/2;
        if(a[mid]>k) right=mid-1;
        else if(a[mid]<k) left=mid+1;
        else return mid;
}
    return -1;
}
int main()
{
    int a[15]={1,5,78,9,745,46789,5412,45,7,45,12,13,14,15,16};
    sort(a,a+15);   
    int k;
    cin>>k;
    int p;
    p=s(a,15,k);
    cout<<p;
    return 0;
}



#include<iostream>
#include<cstring>
using namespace std;

int main(){
    int n,m;
    cin>>n>>m;
    int a[n],s[100]={0};
    long long x=1;
    for(int i=0;i<n;i++)
        cin>>a[i];
    long long y=0;
    long long  p;
    for(int i=0;i<n;i++)
        y+=a[i];
    while(y>x){
        int j=0;
        int ok=0;
        p=(x+y)/2;
 
        for(int i=0;i<m;i++)
        {
            for(;j<n;j++)
            {
                s[i]+=a[j];
                if(s[i]>p)
                    break;
                
                        }
            if(j==n&&i<m){
                ok=1;
                break;
            }
        }
        if(ok) y=p;
        else x=p+1;
        memset(s,0,sizeof(s));
    }
    cout<<x<<endl;
    return 0;
}
