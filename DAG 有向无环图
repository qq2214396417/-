DAG   有向无环图
明确什么是环什么不是环  一定要有顺序才可以指向问题指向问题只想问题 图论
拓扑排序

#include<iostream>
#include<cstring>

using namespace std;

int c[1005];
int G[1005][1005];
int topo[1005],t,n;

bool dfs(int u)
{
    c[u]=-1;
    for(int v=0;v<n;v++)
        if(G[u][v])
        {
            if(c[v]==-1)
                return false;
            if(!c[v]&&!dfs(v))
                return false;
        }
    c[u]=1;
    topo[--t]=u;
    return true;
}
bool toposort()
{
    t=n;
    memset(c,0,sizeof(c));
    for(int i=0;i<n;i++)
        if(!c[i])
            if(!dfs(i))
                return false;
    return true;
}

int main()
{
    memset(G,0,sizeof(G));
    cin>>n;
    int a,b;
    while(cin>>a>>b)
        G[a][b]=1;
    if(toposort())
        for(int i=0;i<n;i++)
            cout<<topo[i]<<' ';
    else
        cout<<"no toposort";
    cout<<endl;
    return 0;
}


#include<iostream>
#include<cstring>

using namespace std;

int vis[1005];
int d[1005],v[30];
int n;

int dp(int s){
    if(s==0)
        return 0;
    if(vis[s])
        return d[s];
    vis[s]=1;
    int& ans=d[s];
    ans=(-1<<30);
    for(int i=0;i<n;i++)
        if(s>=v[i])
            ans=ans>dp(s-v[i])+1?ans:dp(s-v[i])+1;
    return ans;
}

int main()
{
 //   memset(d,-1,sizeof(d));
    memset(vis,0,sizeof(vis));
    cin>>n;
    for(int i=0;i<n;i++)
        cin>>v[i];
    int s;
    cin>>s;
    int x=dp(s);
    cout<<x;
    return 0;
}

#include<iostream>
#include<cstring>

using namespace std;

int vis[1005],v[1005];
int d[1005],n;

int dp(int s)
{
	if(s==0)
		return 0;
	if(vis[s])
		return d[s];
	vis[s]=1;
	int & ans=d[s];
	ans=1<<30;
	for(int i=0;i<n;i++)
	if(s>=v[i])
		ans=ans<dp(s-v[i])+1?ans:dp(s-v[i])+1;
	return ans;
}

int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
		cin>>v[i];
	memset(vis,0,sizeof(vis));
	int s;
	cin>>s;
		int x=dp(s);
		cout<<x<<endl;
	return 0;
}



void print(int *d,int s)
{
	for(int i=0;i<n;i++)
		if(s>=v[i]&&d[s]==d[s-v[i]]+1)
		{
			cout<<i<<' ';
			print(d,s-v[i]);
			break;
		}
}


#include<iostream>
#include<cstring>

using namespace std;

int vis[1005],n,w[1005],v[1005],wd[1005];
int wm(int c)
{
    if(vis[c])
        return wd[c];
    vis[c]=1;
    int & ans=wd[c];
    for(int i=0;i<n;i++)
        if(c>=v[i])
            ans=ans>wm(c-v[i])+w[i]?ans:wm(c-v[i])+w[i];
    return ans;
}
void print(int *wd,int c)
{
    for(int i=0;i<n;i++)
        if(c>=v[i]&&wd[c]==wd[c-v[i]]+w[i])
        {
            cout<<i+1<<' ';
            print(wd,c-v[i]);
            break;
        }
}
int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
        cin>>v[i]>>w[i];
    memset(wd,0,sizeof(wd));
    memset(vis,0,sizeof(vis));
    int c;
    cin>>c;
    int x=wm(c);
    cout<<x<<endl;
    print(wd,c);
    cout<<endl;
    return 0;
}
